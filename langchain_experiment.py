"""Markdown gradio experiment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N8Kgpl3tlggmOTGtsqxR0x--oHW3i91y
"""
# Set the API key - if this key gets committed to a gitrepo then it gets
# disabled
import os
import textwrap

from langchain.chains import StuffDocumentsChain, LLMChain
from langchain.prompts import PromptTemplate
from langchain.chat_models import ChatOpenAI
from langchain.document_loaders import WebBaseLoader
from langchain.text_splitter import TokenTextSplitter
from pyngrok import ngrok

# Set the API key - if this key gets committed to a gitrepo then it gets
# disabled
NGROK_AUTH_TOKEN = ""
ngrok.set_auth_token(NGROK_AUTH_TOKEN)
MY_API_KEY = ""
os.environ["OPENAI_API_KEY"] = MY_API_KEY

loader = WebBaseLoader("https://sites.google.com/view/mnovackmath/home")
docs = loader.load()

text_splitter = TokenTextSplitter(chunk_size=4000, chunk_overlap=0)
docs = loader.load_and_split(text_splitter=text_splitter)

print(f"Number of docs: {len(docs)}")
print()
print(textwrap.fill(docs[0].page_content, max_lines=10))

llm = ChatOpenAI(temperature=0, model_name="gpt-3.5-turbo")
# Instantiate the LLMChain and StuffDocumentsChain
prompt = PromptTemplate.from_template("Summarize this content: {context}")
llm_chain = LLMChain(llm=llm, prompt=prompt)
stuff_chain = StuffDocumentsChain(llm_chain=llm_chain)

# Run the chain
output = stuff_chain.run(docs)

print()
print("ChatGPT output:")
print(textwrap.fill(output))
